{"version":3,"sources":["components/Nav/Nav.styles.js","components/Nav/Nav.js","components/Title/TItle.styles.js","components/Title/Title.js","actions/types.js","components/HeroSlider/Slider.styles.js","components/HeroSlider/Slider.js","actions/movieActions.js","components/UpcomingSlider/Slider.styles.js","components/UpcomingSlider/Slider.js","components/TopRatedSlider/Slider.styles.js","components/TopRatedSlider/Slider.js","reducers/movieReducer.js","reducers/index.js","store.js","pages/home.js","App.js","reportWebVitals.js","index.js"],"names":["StyledNav","styled","nav","Nav","useState","setNav","useEffect","window","addEventListener","scrollY","className","src","process","alt","to","activeClassName","StyledTitle","div","Title","title","FETCH_MOVIES","FETCH_UPCOMING_MOVIES","FETCH_TOPRATED_MOVIES","SwiperStyle","SwiperCore","use","Autoplay","A11y","connect","fetchMovies","dispatch","console","log","fetch","then","res","json","movies","type","payload","results","useSelector","state","items","swiperRef","useRef","onMouseEnter","current","swiper","autoplay","stop","onMouseLeave","start","ref","slidesPerView","grabCursor","loop","delay","speed","map","movie","id","poster_path","vote_average","Navigation","fetchUpcomingMovies","navigation","breakpoints","fetchTopRatedMovies","spaceBetween","initialState","item","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","home","App","exact","path","component","Home","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7d736f4a.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledNav = styled.nav`\n  height: 9vh;\n  width: 100vw;\n  z-index: 10;\n  color: white;\n  font-family: sans-serif;\n  position: fixed;\n  top: 0;\n  nav {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 100%;\n    padding: 0 1rem;\n  }\n  .dark {\n    background: #272727;\n  }\n\n  .transparent {\n    background: transparent;\n  }\n  img {\n    height: 9vh;\n    width: 7vw;\n    padding: 0 1rem;\n  }\n  .nav-items,\n  ul {\n    display: flex;\n    // justify-content: center;\n    align-items: center;\n    list-style: none;\n\n    .active {\n      font-weight: bolder;\n    }\n    a {\n      padding: 0 1rem;\n      text-transform: uppercase;\n      border: none;\n      cursor: pointer;\n      text-decoration: none;\n      color: white;\n      letter-spacing: 1px;\n      font-size: 1.2rem;\n      text-transform: capitalize;\n    }\n  }\n\n  .nav-items h3 {\n    display: none;\n\n    &:hover {\n    }\n  }\n\n  .search-login {\n    padding: 0 2rem;\n    display: flex;\n    justify-content: space-between;\n    font-size: 1.5rem;\n  }\n\n  @media only screen and (max-width: 1024px) {\n    .nav-items h3 {\n      display: inline;\n    }\n    ul {\n      display: none;\n    }\n    img {\n      width: 100%;\n    }\n  }\n`;\n","import React, { useEffect, useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FiSearch, FiLogIn } from \"react-icons/fi\";\nimport { StyledNav } from \"./Nav.styles\";\n\nconst Nav = () => {\n  const [nav, setNav] = useState(false);\n\n  useEffect(() => {\n    const changeBg = () => {\n      if (window.scrollY > 80) {\n        setNav(true);\n      } else {\n        setNav(false);\n      }\n    };\n    window.addEventListener(\"scroll\", changeBg);\n  }, []);\n  return (\n    <StyledNav>\n      <nav className={nav ? \"dark\" : \"transparent\"}>\n        <div className=\"nav-items\">\n          <img src={process.env.PUBLIC_URL + \"/logo.svg\"} alt=\"logo\" />\n          <h3>Browse</h3>\n          <ul>\n            <NavLink to=\"/home\" activeClassName=\"active\">\n              Home\n            </NavLink>\n            <NavLink to=\"/tv-shows\" activeClassName=\"active\">\n              TV Shows\n            </NavLink>\n            <NavLink to=\"/movies\" activeClassName=\"active\">\n              Movies{\" \"}\n            </NavLink>\n            <NavLink to=\"/news\" activeClassName=\"active\">\n              News & Popular{\" \"}\n            </NavLink>\n          </ul>\n        </div>\n        <div className=\"search-login\">\n          <FiSearch className=\"icon\" />\n          <FiLogIn className=\"icon\" />\n        </div>\n      </nav>\n    </StyledNav>\n  );\n};\n\nexport default Nav;\n","import styled from \"styled-components\";\n\nexport const StyledTitle = styled.div`\n  text-align: left;\n  letter-spacing: 2px;\n  font-family: sans-serif;\n  background: #272727;\n  color: white;\n  padding: 2rem;\n`;\n","import { StyledTitle } from \"./TItle.styles\";\n\nconst Title = ({ title }) => {\n  return (\n    <StyledTitle>\n      <h3>{title}</h3>\n    </StyledTitle>\n  );\n};\n\nexport default Title;\n","export const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const SEARCHED_MOVIE = \"SEARCHED_MOVIE\";\nexport const FETCH_UPCOMING_MOVIES = \"FETCH_UPCOMING_MOVIES\";\nexport const FETCH_TOPRATED_MOVIES = \"FETCH_TOPRATED_MOVIES\";\n","import styled from \"styled-components\";\n\nexport const SwiperStyle = styled.div`\n  color: white;\n  position: relative;\n  background: transparent;\n  h1 {\n    font-size: 2.5rem;\n    font-family: sans-serif;\n    letter-spacing: 1.5px;\n    color: rgb(229, 9, 20);\n    text-align: left;\n  }\n  .container {\n    font-family: serif;\n    height: 85vh;\n    width: 100vw;\n  }\n  .container-img {\n    img {\n      height: 85vh;\n      width: 100vw;\n      z-index: 2000;\n    }\n  }\n\n  .title h5 {\n    position: absolute;\n    bottom: 5%;\n    right: 5%;\n    z-index: 20;\n    background: #303030;\n    border: solid 2px green;\n    font-size: 2rem;\n    border-radius: 50%;\n    width: 10vw;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .container-card h2,\n  p {\n    padding: 0;\n  }\n`;\n","import { useRef, useEffect } from \"react\";\nimport { fetchMovies } from \"../../actions/movieActions\";\nimport SwiperCore, { Autoplay, A11y } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { SwiperStyle } from \"./Slider.styles\";\nimport { useSelector, connect } from \"react-redux\";\n\nSwiperCore.use([Autoplay, A11y]);\n\nconst Slider = ({ fetchMovies }) => {\n  const movies = useSelector((state) => state.movies.items);\n  const swiperRef = useRef(null);\n\n  useEffect(() => {\n    fetchMovies();\n    console.log(fetchMovies());\n  }, []);\n  return (\n    <SwiperStyle>\n      <div\n        onMouseEnter={() => swiperRef.current.swiper.autoplay.stop()}\n        onMouseLeave={() => swiperRef.current.swiper.autoplay.start()}\n      >\n        <Swiper\n          ref={swiperRef}\n          slidesPerView={1}\n          grabCursor={true}\n          loop\n          autoplay={{ delay: 1000 }}\n          speed={1200}\n        >\n          <div className=\"container\">\n            {movies &&\n              movies.map((movie, id) => {\n                return (\n                  <SwiperSlide key={id}>\n                    <div className=\"container-img\">\n                      <img\n                        src={\n                          \"https://image.tmdb.org/t/p/w500\" + movie.poster_path\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n\n                    <div className=\"title\">\n                      {/* <p>{movie.overview}</p> */}\n                      <h5>{movie.vote_average}</h5>\n                    </div>\n                  </SwiperSlide>\n                );\n              })}\n          </div>\n        </Swiper>\n      </div>\n    </SwiperStyle>\n  );\n};\n\nexport default connect(null, { fetchMovies })(Slider);\n","import {\n  FETCH_MOVIES,\n  FETCH_UPCOMING_MOVIES,\n  FETCH_TOPRATED_MOVIES,\n  SEARCHED_MOVIE,\n} from \"../actions/types\";\n\nexport const fetchMovies = () => (dispatch) => {\n  console.log(\"fetchin\");\n  fetch(\n    \"https://api.themoviedb.org/3/movie/popular?api_key=636c2a5775bc858d533ffec5b0eb61d9\"\n  )\n    .then((res) => res.json())\n    .then((movies) =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: movies.results,\n      })\n    );\n};\n\nexport const fetchUpcomingMovies = () => (dispatch) => {\n  console.log(\"fetchin trend\");\n\n  fetch(\n    \"https://api.themoviedb.org/3/movie/upcoming?api_key=636c2a5775bc858d533ffec5b0eb61d9\"\n  )\n    .then((res) => res.json())\n    .then((movies) =>\n      dispatch({\n        type: FETCH_UPCOMING_MOVIES,\n        payload: movies.results,\n      })\n    );\n};\n\nexport const fetchTopRatedMovies = () => (dispatch) => {\n  console.log(\"fetchin top rated\");\n  fetch(\n    \"https://api.themoviedb.org/3/movie/top_rated?api_key=636c2a5775bc858d533ffec5b0eb61d9\"\n  )\n    .then((res) => res.json())\n    .then((movies) =>\n      dispatch({\n        type: FETCH_TOPRATED_MOVIES,\n        payload: movies.results,\n      })\n    );\n};\n","import styled from \"styled-components\";\n\nexport const SwiperStyle = styled.div`\n  color: white;\n  position: relative;\n  background: transparent;\n  h1 {\n    font-size: 2.5rem;\n    font-family: sans-serif;\n    letter-spacing: 1.5px;\n    color: rgb(229, 9, 20);\n    text-align: left;\n  }\n  .container {\n    font-family: serif;\n    height: 25vh;\n    width: 20vw;\n  }\n  .container-img {\n    background: #272727;\n    img {\n      margin: 0 1rem;\n      height: 25vh;\n      width: 20vw;\n      z-index: 2000;\n    }\n  }\n\n  .container-card h2,\n  p {\n    padding: 0;\n  }\n  .swiper-button-next,\n  .swiper-button-prev {\n    color: black;\n  }\n  .swiper-button-next:hover,\n  .swiper-button-prev:hover {\n    color: #fff;\n  }\n`;\n","import { useRef, useEffect } from \"react\";\nimport { fetchUpcomingMovies } from \"../../actions/movieActions\";\nimport SwiperCore, { Autoplay, A11y, Navigation } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { SwiperStyle } from \"./Slider.styles\";\nimport { useSelector, connect } from \"react-redux\";\n\nSwiperCore.use([Autoplay, A11y, Navigation]);\n\nconst Slider = ({ fetchUpcomingMovies }) => {\n  const movies = useSelector((state) => state.movies.items);\n  const swiperRef = useRef(null);\n\n  useEffect(() => {\n    fetchUpcomingMovies();\n  }, [fetchUpcomingMovies]);\n  return (\n    <SwiperStyle>\n      <div\n        onMouseEnter={() => swiperRef.current.swiper.autoplay.stop()}\n        onMouseLeave={() => swiperRef.current.swiper.autoplay.start()}\n      >\n        <Swiper\n          ref={swiperRef}\n          slidesPerView={5}\n          grabCursor={true}\n          loop\n          navigation\n          autoplay={{ delay: 1000 }}\n          speed={1200}\n          breakpoints={{\n            350: {\n              slidesPerView: 3,\n            },\n            640: {\n              slidesPerView: 4,\n            },\n            768: {\n              slidesPerView: 5,\n            },\n            1024: {\n              slidesPerView: 5,\n            },\n          }}\n        >\n          <div className=\"container\">\n            {movies &&\n              movies.map((movie, id) => {\n                return (\n                  <SwiperSlide key={id}>\n                    <div className=\"container-img\">\n                      <img\n                        src={\n                          \"https://image.tmdb.org/t/p/w500\" + movie.poster_path\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                  </SwiperSlide>\n                );\n              })}\n          </div>\n        </Swiper>\n      </div>\n    </SwiperStyle>\n  );\n};\n\nexport default connect(null, { fetchUpcomingMovies })(Slider);\n","import styled from \"styled-components\";\n\nexport const SwiperStyle = styled.div`\n  color: white;\n  position: relative;\n  background: transparent;\n  h1 {\n    font-size: 2.5rem;\n    font-family: sans-serif;\n    letter-spacing: 1.5px;\n    color: rgb(229, 9, 20);\n    text-align: left;\n  }\n  .container {\n    font-family: serif;\n    height: 25vh;\n    width: 20vw;\n  }\n  .container-img {\n    background: #272727;\n    img {\n      height: 25vh;\n      width: 20vw;\n      z-index: 2000;\n    }\n  }\n\n  .container-card h2,\n  p {\n    padding: 0;\n  }\n`;\n","import { useRef, useEffect } from \"react\";\nimport { fetchTopRatedMovies } from \"../../actions/movieActions\";\nimport SwiperCore, { Autoplay, A11y, Navigation } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { SwiperStyle } from \"./Slider.styles\";\nimport { useSelector, connect } from \"react-redux\";\n\nSwiperCore.use([Autoplay, A11y, Navigation]);\n\nconst Slider = ({ fetchTopRatedMovies }) => {\n  const movies = useSelector((state) => state.movies.items);\n  const swiperRef = useRef(null);\n\n  useEffect(() => {\n    fetchTopRatedMovies();\n  }, [fetchTopRatedMovies]);\n  return (\n    <SwiperStyle>\n      <div\n        onMouseEnter={() => swiperRef.current.swiper.autoplay.stop()}\n        onMouseLeave={() => swiperRef.current.swiper.autoplay.start()}\n      >\n        <Swiper\n          ref={swiperRef}\n          slidesPerView={5}\n          spaceBetween={40}\n          grabCursor={true}\n          loop\n          navigation\n          autoplay={{ delay: 1000 }}\n          speed={1200}\n        >\n          <div className=\"container\">\n            {movies &&\n              movies.map((movie, id) => {\n                return (\n                  <SwiperSlide key={id}>\n                    <div className=\"container-img\">\n                      <img\n                        src={\n                          \"https://image.tmdb.org/t/p/w500\" + movie.poster_path\n                        }\n                        alt=\"\"\n                      />\n                    </div>\n                  </SwiperSlide>\n                );\n              })}\n          </div>\n        </Swiper>\n      </div>\n    </SwiperStyle>\n  );\n};\n\nexport default connect(null, { fetchTopRatedMovies })(Slider);\n","import {\n  FETCH_MOVIES,\n  FETCH_UPCOMING_MOVIES,\n  FETCH_TOPRATED_MOVIES,\n  SEARCHED_MOVIE,\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  item: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      console.log(\"reducer\");\n      return {\n        ...state,\n        items: action.payload,\n      };\n    case FETCH_UPCOMING_MOVIES:\n      return {\n        ...state,\n        items: action.payload,\n      };\n    case FETCH_TOPRATED_MOVIES:\n      return {\n        ...state,\n        items: action.payload,\n      };\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport movieReducer from \"./movieReducer\";\n\nexport default combineReducers({\n  movies: movieReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleware)\n);\n\nexport default store;\n","import Navbar from \"../components/Nav/Nav\";\nimport Title from \"../components/Title/Title\";\nimport HeroSlider from \"../components/HeroSlider/Slider\";\nimport TrendingMovies from \"../components/UpcomingSlider/Slider\";\nimport TopRatedMovies from \"../components/TopRatedSlider/Slider\";\nimport { Provider } from \"react-redux\";\nimport store from \"../store\";\n\nconst home = () => {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Navbar />\n        <HeroSlider />\n        <Title title=\"Trending Now on Metflix\" />\n        <TrendingMovies />\n        <Title title=\"Top Rated of All Time\" />\n        {/* <TopRatedMovies /> */}\n      </div>\n    </Provider>\n  );\n};\n\nexport default home;\n","import { Route, Switch } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Home} />\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"swiper/swiper.scss\";\nimport \"swiper/components/navigation/navigation.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename={\"/redux-movie-test\"}>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}