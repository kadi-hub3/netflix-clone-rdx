{"version":3,"sources":["components/Header/Header.styles.js","actions/types.js","components/Swiper/Slider.styles.js","components/Swiper/Slider.js","actions/movieActions.js","reducers/movieReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["styled","div","FETCH_MOVIES","SwiperStyle","SwiperCore","use","Navigation","Pagination","Scrollbar","A11y","Slider","this","props","fetchMovies","className","movies","map","movie","id","title","body","Component","connect","state","items","dispatch","console","log","fetch","then","res","json","type","payload","initialState","item","combineReducers","action","middleware","thunk","store","createStore","rootReducer","applyMiddleware","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAE4BA,IAAOC,IAAV,oxB,8CCFZC,EAAe,e,wCCEfC,EAAcH,IAAOC,IAAV,4zBCKxBG,IAAWC,IAAI,CAACC,IAAYC,IAAYC,IAAWC,M,IAE7CC,E,uKACJ,WACEC,KAAKC,MAAMC,gB,oBAGb,WACE,OACE,eAACV,EAAD,WACE,+CACA,qBAAKW,UAAU,YAAf,SACGH,KAAKC,MAAMG,OAAOC,KAAI,SAACC,EAAOC,GAC7B,OACE,sBAAKJ,UAAU,iBAAf,UACG,IACD,6BAAKG,EAAME,QACX,4BAAIF,EAAMG,SAHyBF,e,GAZ9BG,aA6BNC,eAJS,SAACC,GAAD,MAAY,CAClCR,OAAQQ,EAAMR,OAAOS,SAGiB,CAAEX,YCpCf,kBAAM,SAACY,GAChCC,QAAQC,IAAI,WACZC,MAAM,wDACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACd,GAAD,OACJU,EAAS,CACPO,KAAM9B,EACN+B,QAASlB,UD6BFO,CAA0CZ,G,uBEpCnDwB,EAAe,CACnBV,MAAO,GACPW,KAAM,ICDOC,cAAgB,CAC7BrB,ODGa,WAAmC,IAAlCQ,EAAiC,uDAAzBW,EAAcG,EAAW,uCAC/C,OAAQA,EAAOL,MACb,KAAK9B,EAEH,OADAwB,QAAQC,IAAI,WACL,2BACFJ,GADL,IAEEC,MAAOa,EAAOJ,UAElB,QACE,OAAOV,MEVPe,EAAa,CAACC,KAQLC,EANDC,YACZC,EALmB,GAOnBC,IAAe,WAAf,EAAmBL,I,MCMNM,MAXf,WACE,OACE,cAAC,IAAD,CAAUJ,MAAOA,EAAjB,SACE,qBAAK1B,UAAU,MAAf,SAEE,cAAC,EAAD,SCCO+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7f6f1d67.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const StyledHeader = styled.div`\n  padding: 1rem 4rem;\n  .categories,\n  .lingo {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .lingo {\n    font-family: serif;\n  }\n  .categories {\n    font-family: Georgia, \"Times New Roman\", Times, serif;\n    font-size: 0.9rem;\n  }\n  a {\n    padding: 0.5rem 1rem;\n    text-transform: uppercase;\n    border: none;\n    cursor: pointer;\n  }\n  h1 {\n    text-align: center;\n    padding: 2rem 0;\n    text-transform: uppercase;\n    font-family: \"Yeseva One\", cursive;\n    letter-spacing: 5px;\n  }\n  .title {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n  .title h1 {\n    font-family: \"UnifrakturCook\", cursive;\n  }\n  .active {\n    font-weight: bolder;\n  }\n`;\n","export const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const SEARCHED_MOVIE = \"SEARCHED_MOVIE\";\n","import styled from \"styled-components\";\n\nexport const SwiperStyle = styled.div`\n  width: 100vw;\n  padding: 2rem;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  background: #202020;\n  color: white;\n\n  h1 {\n    font-size: 2.5rem;\n    font-family: sans-serif;\n    letter-spacing: 1.5px;\n    color: rgb(229, 9, 20);\n    text-align: left;\n  }\n  .container {\n    font-family: serif;\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: flex-start;\n    padding: 2rem;\n  }\n  .container-card {\n    width: 20vw;\n    background: gray;\n    margin: 1rem;\n    padding: 1rem;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    box-shadow: 10px 5px 5px #3d3d3d;\n    background: rgb(0, 0, 0, 0.5);\n  }\n  .container-card h2,\n  p {\n    padding: 1rem 0;\n  }\n`;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../../actions/movieActions\";\nimport SwiperCore, { Navigation, Pagination, Scrollbar, A11y } from \"swiper\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { SwiperStyle } from \"./Slider.styles\";\n\nSwiperCore.use([Navigation, Pagination, Scrollbar, A11y]);\n\nclass Slider extends Component {\n  componentDidMount() {\n    this.props.fetchMovies();\n  }\n\n  render() {\n    return (\n      <SwiperStyle>\n        <h1>Latest Movies</h1>\n        <div className=\"container\">\n          {this.props.movies.map((movie, id) => {\n            return (\n              <div className=\"container-card\" key={id}>\n                {\" \"}\n                <h2>{movie.title}</h2>\n                <p>{movie.body}</p>\n              </div>\n            );\n          })}\n        </div>\n      </SwiperStyle>\n    );\n  }\n}\n\nconst mapStatetoProps = (state) => ({\n  movies: state.movies.items,\n});\n\nexport default connect(mapStatetoProps, { fetchMovies })(Slider);\n","import { FETCH_MOVIES, SEARCHED_MOVIE } from \"../actions/types\";\n\nexport const fetchMovies = () => (dispatch) => {\n  console.log(\"fetchin\");\n  fetch(\"https://jsonplaceholder.typicode.com/posts?_limit=20\")\n    .then((res) => res.json())\n    .then((movies) =>\n      dispatch({\n        type: FETCH_MOVIES,\n        payload: movies,\n      })\n    );\n};\n","import { FETCH_MOVIES, SEARCHED_MOVIE } from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  item: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_MOVIES:\n      console.log(\"reducer\");\n      return {\n        ...state,\n        items: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport movieReducer from \"./movieReducer\";\n\nexport default combineReducers({\n  movies: movieReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  applyMiddleware(...middleware)\n);\n\nexport default store;\n","import Header from \"./components/Header/Header\";\nimport MovieSlider from \"./components/Swiper/Slider\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        {/* <Header /> */}\n        <MovieSlider />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}